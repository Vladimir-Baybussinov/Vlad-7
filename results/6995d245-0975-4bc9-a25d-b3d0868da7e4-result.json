{"name": "test_filter_2", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=125.0.6422.77)\nStacktrace:\n\tGetHandleVerifier [0x00007FF697701F22+60322]\n\t(No symbol) [0x00007FF69767CE99]\n\t(No symbol) [0x00007FF697537CE9]\n\t(No symbol) [0x00007FF697581093]\n\t(No symbol) [0x00007FF69757F20B]\n\t(No symbol) [0x00007FF6975AC21A]\n\t(No symbol) [0x00007FF69757ADB6]\n\t(No symbol) [0x00007FF6975AC430]\n\t(No symbol) [0x00007FF6975CBC80]\n\t(No symbol) [0x00007FF6975ABFC3]\n\t(No symbol) [0x00007FF697579617]\n\t(No symbol) [0x00007FF69757A211]\n\tGetHandleVerifier [0x00007FF697A1946D+3301613]\n\tGetHandleVerifier [0x00007FF697A63693+3605267]\n\tGetHandleVerifier [0x00007FF697A59410+3563664]\n\tGetHandleVerifier [0x00007FF6977B42F6+790390]\n\t(No symbol) [0x00007FF6976874DF]\n\t(No symbol) [0x00007FF6976833D4]\n\t(No symbol) [0x00007FF697683562]\n\t(No symbol) [0x00007FF697672F6F]\n\tBaseThreadInitThunk [0x00007FFD988B74B4+20]\n\tRtlUserThreadStart [0x00007FFD98DC26A1+33]", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bc8362f085cb1c5c2f28d6cb11da86c9\")>\n\n    def test_filter_2(browser):\n        with allure.step('Test filter_2'):\n            filters_page_2 = FiltersPage2(browser)\n    \n        with allure.step(\"open_filters_2\"):\n            filters_page_2.open()\n            sleep(3)\n    \n        with allure.step(\"open_search\"):\n            filters_page_2.open_search()\n    \n        with allure.step(\"find_plus\"):\n            filters_page_2.find_plus()\n    \n        with allure.step(\"plus\"):\n            filters_page_2.plus()\n    \n        with allure.step(\"send1\"):\n>           filters_page_2.send1()\n\ntests\\test_filter_2.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\filter_2.py:32: in send1\n    self.plus_ingredients.send_keys('Куриное филе')\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:231: in send_keys\n    self._execute(\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000020CF01BF350>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...07FF697672F6F]\\\\n\\\\tBaseThreadInitThunk [0x00007FFD988B74B4+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFD98DC26A1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=125.0.6422.77)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF697701F22+60322]\nE       \t(No symbol) [0x00007FF69767CE99]\nE       \t(No symbol) [0x00007FF697537CE9]\nE       \t(No symbol) [0x00007FF697581093]\nE       \t(No symbol) [0x00007FF69757F20B]\nE       \t(No symbol) [0x00007FF6975AC21A]\nE       \t(No symbol) [0x00007FF69757ADB6]\nE       \t(No symbol) [0x00007FF6975AC430]\nE       \t(No symbol) [0x00007FF6975CBC80]\nE       \t(No symbol) [0x00007FF6975ABFC3]\nE       \t(No symbol) [0x00007FF697579617]\nE       \t(No symbol) [0x00007FF69757A211]\nE       \tGetHandleVerifier [0x00007FF697A1946D+3301613]\nE       \tGetHandleVerifier [0x00007FF697A63693+3605267]\nE       \tGetHandleVerifier [0x00007FF697A59410+3563664]\nE       \tGetHandleVerifier [0x00007FF6977B42F6+790390]\nE       \t(No symbol) [0x00007FF6976874DF]\nE       \t(No symbol) [0x00007FF6976833D4]\nE       \t(No symbol) [0x00007FF697683562]\nE       \t(No symbol) [0x00007FF697672F6F]\nE       \tBaseThreadInitThunk [0x00007FFD988B74B4+20]\nE       \tRtlUserThreadStart [0x00007FFD98DC26A1+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementNotInteractableException"}, "steps": [{"name": "Test filter_2", "status": "passed", "start": 1716829327880, "stop": 1716829327880}, {"name": "open_filters_2", "status": "passed", "start": 1716829327880, "stop": 1716829332595}, {"name": "open_search", "status": "passed", "start": 1716829332595, "stop": 1716829334642}, {"name": "find_plus", "status": "passed", "start": 1716829334642, "stop": 1716829334651}, {"name": "plus", "status": "passed", "start": 1716829334651, "stop": 1716829334673}, {"name": "send1", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=125.0.6422.77)\nStacktrace:\n\tGetHandleVerifier [0x00007FF697701F22+60322]\n\t(No symbol) [0x00007FF69767CE99]\n\t(No symbol) [0x00007FF697537CE9]\n\t(No symbol) [0x00007FF697581093]\n\t(No symbol) [0x00007FF69757F20B]\n\t(No symbol) [0x00007FF6975AC21A]\n\t(No symbol) [0x00007FF69757ADB6]\n\t(No symbol) [0x00007FF6975AC430]\n\t(No symbol) [0x00007FF6975CBC80]\n\t(No symbol) [0x00007FF6975ABFC3]\n\t(No symbol) [0x00007FF697579617]\n\t(No symbol) [0x00007FF69757A211]\n\tGetHandleVerifier [0x00007FF697A1946D+3301613]\n\tGetHandleVerifier [0x00007FF697A63693+3605267]\n\tGetHandleVerifier [0x00007FF697A59410+3563664]\n\tGetHandleVerifier [0x00007FF6977B42F6+790390]\n\t(No symbol) [0x00007FF6976874DF]\n\t(No symbol) [0x00007FF6976833D4]\n\t(No symbol) [0x00007FF697683562]\n\t(No symbol) [0x00007FF697672F6F]\n\tBaseThreadInitThunk [0x00007FFD988B74B4+20]\n\tRtlUserThreadStart [0x00007FFD98DC26A1+33]\n\n", "trace": "  File \"C:\\Users\\BaybusinovV\\PycharmProjects\\Vlad-7\\tests\\test_filter_2.py\", line 24, in test_filter_2\n    filters_page_2.send1()\n  File \"C:\\Users\\BaybusinovV\\PycharmProjects\\Vlad-7\\pages\\filter_2.py\", line 32, in send1\n    self.plus_ingredients.send_keys('Куриное филе')\n  File \"C:\\Users\\BaybusinovV\\PycharmProjects\\Vlad-7\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 231, in send_keys\n    self._execute(\n  File \"C:\\Users\\BaybusinovV\\PycharmProjects\\Vlad-7\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\BaybusinovV\\PycharmProjects\\Vlad-7\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\BaybusinovV\\PycharmProjects\\Vlad-7\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1716829334673, "stop": 1716829334740}], "start": 1716829327879, "stop": 1716829334742, "uuid": "82dab0e3-3f1e-49fd-9b70-5ebe3b49e6dd", "historyId": "f0387d49e8fbe599162a5d270e4e83d4", "testCaseId": "f0387d49e8fbe599162a5d270e4e83d4", "fullName": "tests.test_filter_2#test_filter_2", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_filter_2"}, {"name": "host", "value": "006-01"}, {"name": "thread", "value": "29848-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_filter_2"}]}