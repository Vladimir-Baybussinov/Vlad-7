{"name": "test_filter_1", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=125.0.6422.112); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF6E9B21F22+60322]\n\t(No symbol) [0x00007FF6E9A9CE99]\n\t(No symbol) [0x00007FF6E9957EBA]\n\t(No symbol) [0x00007FF6E995DCEE]\n\t(No symbol) [0x00007FF6E9960641]\n\t(No symbol) [0x00007FF6E99606E0]\n\t(No symbol) [0x00007FF6E99A968C]\n\t(No symbol) [0x00007FF6E999B346]\n\t(No symbol) [0x00007FF6E99CC21A]\n\t(No symbol) [0x00007FF6E999ADB6]\n\t(No symbol) [0x00007FF6E99CC430]\n\t(No symbol) [0x00007FF6E99EBC80]\n\t(No symbol) [0x00007FF6E99CBFC3]\n\t(No symbol) [0x00007FF6E9999617]\n\t(No symbol) [0x00007FF6E999A211]\n\tGetHandleVerifier [0x00007FF6E9E3946D+3301613]\n\tGetHandleVerifier [0x00007FF6E9E83693+3605267]\n\tGetHandleVerifier [0x00007FF6E9E79410+3563664]\n\tGetHandleVerifier [0x00007FF6E9BD42F6+790390]\n\t(No symbol) [0x00007FF6E9AA74DF]\n\t(No symbol) [0x00007FF6E9AA33D4]\n\t(No symbol) [0x00007FF6E9AA3562]\n\t(No symbol) [0x00007FF6E9A92F6F]\n\tBaseThreadInitThunk [0x00007FF86D1C7344+20]\n\tRtlUserThreadStart [0x00007FF86E5626B1+33]", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"55282b64469891523bb97d3a1dd46c11\")>\n\n    def test_filter_1(browser):\n        with allure.step(\"Test filter_1\"):\n            filters_page_1 = FiltersPage1(browser)\n    \n        with allure.step(\"open_filter_1\"):\n            filters_page_1.open()\n    \n        with allure.step(\"cat\"):\n>           filters_page_1.cat()\n\ntests\\test_filter_1.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\filter_1.py:15: in cat\n    self.find((By.XPATH, \"//div[@class='emotion-1jy0sh8']\")).click()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002CCB2EB2250>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...07FF6E9A92F6F]\\\\n\\\\tBaseThreadInitThunk [0x00007FF86D1C7344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FF86E5626B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=125.0.6422.112); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6E9B21F22+60322]\nE       \t(No symbol) [0x00007FF6E9A9CE99]\nE       \t(No symbol) [0x00007FF6E9957EBA]\nE       \t(No symbol) [0x00007FF6E995DCEE]\nE       \t(No symbol) [0x00007FF6E9960641]\nE       \t(No symbol) [0x00007FF6E99606E0]\nE       \t(No symbol) [0x00007FF6E99A968C]\nE       \t(No symbol) [0x00007FF6E999B346]\nE       \t(No symbol) [0x00007FF6E99CC21A]\nE       \t(No symbol) [0x00007FF6E999ADB6]\nE       \t(No symbol) [0x00007FF6E99CC430]\nE       \t(No symbol) [0x00007FF6E99EBC80]\nE       \t(No symbol) [0x00007FF6E99CBFC3]\nE       \t(No symbol) [0x00007FF6E9999617]\nE       \t(No symbol) [0x00007FF6E999A211]\nE       \tGetHandleVerifier [0x00007FF6E9E3946D+3301613]\nE       \tGetHandleVerifier [0x00007FF6E9E83693+3605267]\nE       \tGetHandleVerifier [0x00007FF6E9E79410+3563664]\nE       \tGetHandleVerifier [0x00007FF6E9BD42F6+790390]\nE       \t(No symbol) [0x00007FF6E9AA74DF]\nE       \t(No symbol) [0x00007FF6E9AA33D4]\nE       \t(No symbol) [0x00007FF6E9AA3562]\nE       \t(No symbol) [0x00007FF6E9A92F6F]\nE       \tBaseThreadInitThunk [0x00007FF86D1C7344+20]\nE       \tRtlUserThreadStart [0x00007FF86E5626B1+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: StaleElementReferenceException"}, "steps": [{"name": "Test filter_1", "status": "passed", "start": 1716915123018, "stop": 1716915123018}, {"name": "open_filter_1", "status": "passed", "start": 1716915123018, "stop": 1716915123156}, {"name": "cat", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=125.0.6422.112); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF6E9B21F22+60322]\n\t(No symbol) [0x00007FF6E9A9CE99]\n\t(No symbol) [0x00007FF6E9957EBA]\n\t(No symbol) [0x00007FF6E995DCEE]\n\t(No symbol) [0x00007FF6E9960641]\n\t(No symbol) [0x00007FF6E99606E0]\n\t(No symbol) [0x00007FF6E99A968C]\n\t(No symbol) [0x00007FF6E999B346]\n\t(No symbol) [0x00007FF6E99CC21A]\n\t(No symbol) [0x00007FF6E999ADB6]\n\t(No symbol) [0x00007FF6E99CC430]\n\t(No symbol) [0x00007FF6E99EBC80]\n\t(No symbol) [0x00007FF6E99CBFC3]\n\t(No symbol) [0x00007FF6E9999617]\n\t(No symbol) [0x00007FF6E999A211]\n\tGetHandleVerifier [0x00007FF6E9E3946D+3301613]\n\tGetHandleVerifier [0x00007FF6E9E83693+3605267]\n\tGetHandleVerifier [0x00007FF6E9E79410+3563664]\n\tGetHandleVerifier [0x00007FF6E9BD42F6+790390]\n\t(No symbol) [0x00007FF6E9AA74DF]\n\t(No symbol) [0x00007FF6E9AA33D4]\n\t(No symbol) [0x00007FF6E9AA3562]\n\t(No symbol) [0x00007FF6E9A92F6F]\n\tBaseThreadInitThunk [0x00007FF86D1C7344+20]\n\tRtlUserThreadStart [0x00007FF86E5626B1+33]\n\n", "trace": "  File \"C:\\Users\\BaybusinovV\\PycharmProjects\\Vlad-7-1\\tests\\test_filter_1.py\", line 14, in test_filter_1\n    filters_page_1.cat()\n  File \"C:\\Users\\BaybusinovV\\PycharmProjects\\Vlad-7-1\\pages\\filter_1.py\", line 15, in cat\n    self.find((By.XPATH, \"//div[@class='emotion-1jy0sh8']\")).click()\n  File \"C:\\Users\\BaybusinovV\\PycharmProjects\\Vlad-7-1\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\BaybusinovV\\PycharmProjects\\Vlad-7-1\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\BaybusinovV\\PycharmProjects\\Vlad-7-1\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\BaybusinovV\\PycharmProjects\\Vlad-7-1\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1716915123156, "stop": 1716915140932}], "start": 1716915123018, "stop": 1716915140949, "uuid": "03066e35-566a-42e4-9469-5f2ae14b0ba6", "historyId": "bc53d51b0dc0c6ed0d9a39b424db99f3", "testCaseId": "bc53d51b0dc0c6ed0d9a39b424db99f3", "fullName": "tests.test_filter_1#test_filter_1", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_filter_1"}, {"name": "host", "value": "601-09ssd"}, {"name": "thread", "value": "3076-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_filter_1"}]}